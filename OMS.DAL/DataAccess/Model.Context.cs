//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OMS.DAL.DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SystemSetting> SystemSettings { get; set; }
        public virtual DbSet<Attachment> Attachments { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerDisease> CustomerDiseases { get; set; }
        public virtual DbSet<CustomerTitle> CustomerTitles { get; set; }
        public virtual DbSet<Disease> Diseases { get; set; }
        public virtual DbSet<Doctor> Doctors { get; set; }
        public virtual DbSet<Email> Emails { get; set; }
        public virtual DbSet<Examination> Examinations { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<GroupPageAction> GroupPageActions { get; set; }
        public virtual DbSet<Job> Jobs { get; set; }
        public virtual DbSet<Material> Materials { get; set; }
        public virtual DbSet<MedicalLensDetail> MedicalLensDetails { get; set; }
        public virtual DbSet<MedicalLensDtailsType> MedicalLensDtailsTypes { get; set; }
        public virtual DbSet<MedicalLensMaster> MedicalLensMasters { get; set; }
        public virtual DbSet<MedicalLensPurchaseDetail> MedicalLensPurchaseDetails { get; set; }
        public virtual DbSet<MedicalLensSalesDetail> MedicalLensSalesDetails { get; set; }
        public virtual DbSet<Model> Models { get; set; }
        public virtual DbSet<Nationality> Nationalities { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<NotificationResponse> NotificationResponses { get; set; }
        public virtual DbSet<NotificationSeen> NotificationSeens { get; set; }
        public virtual DbSet<PageAction> PageActions { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<PurchaseTransactionDetail> PurchaseTransactionDetails { get; set; }
        public virtual DbSet<PurchaseTransactionMaster> PurchaseTransactionMasters { get; set; }
        public virtual DbSet<PurchaseTransactionPayment> PurchaseTransactionPayments { get; set; }
        public virtual DbSet<SalesTransaction> SalesTransactions { get; set; }
        public virtual DbSet<SalesTransactionDetail> SalesTransactionDetails { get; set; }
        public virtual DbSet<SalesTransactionPayment> SalesTransactionPayments { get; set; }
        public virtual DbSet<SMSs> SMSses { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<SupplierContactPerson> SupplierContactPersons { get; set; }
        public virtual DbSet<SystemConfiguration> SystemConfigurations { get; set; }
        public virtual DbSet<SystemErrorLog> SystemErrorLogs { get; set; }
        public virtual DbSet<SystemPage> SystemPages { get; set; }
        public virtual DbSet<Upload> Uploads { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserGroup> UserGroups { get; set; }
        public virtual DbSet<UserPageAction> UserPageActions { get; set; }
        public virtual DbSet<UserWarehouse> UserWarehouses { get; set; }
        public virtual DbSet<Warehouse> Warehouses { get; set; }
        public virtual DbSet<WarehouseTransaction> WarehouseTransactions { get; set; }
        public virtual DbSet<WarehouseTransactionDetail> WarehouseTransactionDetails { get; set; }
        public virtual DbSet<WarehouseVerification> WarehouseVerifications { get; set; }
        public virtual DbSet<WarehouseVerificationDetail> WarehouseVerificationDetails { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<CoatingDiagram> CoatingDiagrams { get; set; }
        public virtual DbSet<LenseIndex> LenseIndexes { get; set; }
        public virtual DbSet<MedicalLensType> MedicalLensTypes { get; set; }
        public virtual DbSet<MultifocalDesign> MultifocalDesigns { get; set; }
        public virtual DbSet<SPH> SPHs { get; set; }
        public virtual DbSet<VersionType> VersionTypes { get; set; }
        public virtual DbSet<PurchaseReportView> PurchaseReportViews { get; set; }
        public virtual DbSet<WarehouseProductsView> WarehouseProductsViews { get; set; }
        public virtual DbSet<CYL> CYLs { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<SalesReportView> SalesReportViews { get; set; }
        public virtual DbSet<SalesTrackingReportView> SalesTrackingReportViews { get; set; }
        public virtual DbSet<CLSPAndSolutionType> CLSPAndSolutionTypes { get; set; }
        public virtual DbSet<UsePeriod> UsePeriods { get; set; }
        public virtual DbSet<Grade> Grades { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Power> Powers { get; set; }
        public virtual DbSet<ColorCategoy> ColorCategoies { get; set; }
    
        public virtual int sp_addextendedproc(string functname, string dllname)
        {
            var functnameParameter = functname != null ?
                new ObjectParameter("functname", functname) :
                new ObjectParameter("functname", typeof(string));
    
            var dllnameParameter = dllname != null ?
                new ObjectParameter("dllname", dllname) :
                new ObjectParameter("dllname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addextendedproc", functnameParameter, dllnameParameter);
        }
    
        public virtual int sp_dropextendedproc(string functname)
        {
            var functnameParameter = functname != null ?
                new ObjectParameter("functname", functname) :
                new ObjectParameter("functname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropextendedproc", functnameParameter);
        }
    }
}
