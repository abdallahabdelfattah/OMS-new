@using SmartERP.Managment.Models;
@using SmartERP.BL;
@using SmartERP.Managment.Utilities;

@{
    ViewBag.Title = "System Notification";
    Layout = "~/Views/Shared/_layout.cshtml";
}
<div id="content">
    <!-- Title -->
    <div class="row heading-bg">
        <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
            <h5 class="txt-dark">System Notification</h5>
        </div>
        <!-- Breadcrumb -->
        <div class="col-lg-9 col-sm-8 col-md-8 col-xs-12">
            <ol class="breadcrumb">
                <li><a href="#">Dashboard</a></li>
                <li><a href="#"><span>Settings</span></a></li>
                <li class="active"><span>System Notification</span></li>
            </ol>
        </div>
        <!-- /Breadcrumb -->
    </div>
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <h5>List</h5>
            <div class="ibox-tools">
                <a class="collapse-link">
                    <i class="fa fa-chevron-up"></i>
                </a>
            </div>
        </div>
        <div class="ibox-content">
            <paged-grid params="GridCtrl:GridCtrl"></paged-grid>
        </div>
    </div>
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <h5>Details</h5>
            <div class='pull-right'>
                <div class='doc-buttons'>
                    <a href='#' class='btn btn-success btn-xs toolbarBtn' data-bind='click:New,visible:Model.IsAdmin()'>New</a>
                    <a href='#' class='btn btn-primary btn-xs toolbarBtn' data-bind='click:Save,visible:Model.ID() == 0 && Model.IsAdmin()'>Save</a>
                    <a href='#' class='btn btn-danger btn-xs toolbarBtn' data-bind='visible:(Model.ID()>0 && Model.IsAdmin()),click:Delete'>Remove</a>
                    <a href='#' data-toggle="modal" data-target="#NotificationResponseModal" class='btn btn-info btn-xs toolbarBtn' data-bind='click:Save,visible:Model.ID()>0'>Add Response</a>
                </div>
            </div>
        </div>
        <div class="ibox-content" id="scrollTo">
            @KOWriter.WriteErrorMessage()
            <div class="row">
                <div class="col-lg-6">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label class="control-label">Date</label>
                                @KOWriter.WriteLabel("Model.CreationDate")
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label class="control-label">Expire Date</label>
                                <input type='text' data-bind="dateTimePicker: Model.ExpirDate,enable:Model.ID()==0, format: 'DD/MM/YYYY'" class="form-control" />
                                @*@KOWriter.WriteTextbox("Model.ExpirDate", ",enable:Model.ID()==0")*@
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label class="control-label">Title</label>
                                @KOWriter.WriteTextbox("Model.Title", ",enable:Model.ID()==0")
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label class="control-label">Target Group</label>
                                @KOWriter.WriteDropDown("Model.GroupID", "Groups", additionalKOattributes: ",optionsCaption:\"--All--\",enable:Model.ID()==0")
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label class="control-label">Description</label>
                                @KOWriter.WriteTextArea("Model.Description", ",enable:Model.ID()==0")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">@*data-bind="visible:Model.IsAdmin()"*@
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="pt-20">
                                <div class="streamline user-activity" data-bind="foreach:TransactionsComputed">
                                    <div class="sl-item">
                                        <a href="javascript:void(0)">
                                            <div class="sl-avatar avatar avatar-sm avatar-circle">
                                                <img class="img-responsive img-circle" src="../img/user.png" alt="avatar">
                                            </div>
                                            <div class="sl-content">
                                                <p class="inline-block"><span class="capitalize-font txt-success mr-5 weight-500" data-bind="text:ResponseName">Clay Masse</span><span data-bind="text:ShortDescription">invited to join the meeting in the conference room at 9.45 am</span></p>
                                                <span class="block txt-grey font-12 capitalize-font" data-bind="text:ResponseDate">3 Min</span>
                                                <p class="inline-block" style="word-wrap: break-word;width: 100%;" data-bind="text:Description"></p>
                                            </div>
                                        </a>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="NotificationResponseModal" tabindex="-1" role="dialog" aria-labelledby="NotificationResponseModal" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form class="bs-example">
                    <div class="modal-header">
                        <div style="float:right;">
                            <button type="submit" href='#' class='btn btn-primary btn-xs toolbarBtn' data-bind='click:SaveResponse'>Save</button>
                            <button href='#' class='btn btn-success btn-xs toolbarBtn' data-dismiss="modal">Close</button>
                        </div>
                        <h4 class="modal-title" id="myModalLabel">Add Notification Response</h4>
                    </div>
                    <div class="modal-body" data-bind="with:NotificationResponseModal" style="max-height:550px;">

                        <div style="display:none" data-bind="style:{display:$root.ModalErrors().length>0?'block':'none'}" class="alert alert-danger alert-dismissible" hidden role="alert">
                            <button type="button" class="close" data-hide="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <ul data-bind="style:{display:$root.ModalErrors().length>0?'block':'none'},foreach:$root.ModalErrors" style="display:none">
                                <li data-bind="text:$data"></li>
                            </ul>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label class="control-label" for="">Notification Response</label>
                                    <textarea id="txtNotiResponse" type='text' class='form-control' rows='8' cols='35'></textarea>
                                </div>
                            </div>
                        </div>

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        function Controller()
        {
            var self = this;
            self.Errors = ko.viewmodel.fromModel([]);
            self.ModelJS = @Html.Raw(Json.Encode(new NotificationModel()));
            self.Groups = ko.viewmodel.fromModel(@Html.Raw(Json.Encode(ViewBag.Groups)));

            self.Model = ko.viewmodel.fromModel(self.ModelJS);
            self.SC = ko.viewmodel.fromModel(@Html.Raw(Json.Encode(new NotificationSC(){PageIndex=1, RowCount = 10, FinancialYearID = SessionRegistery.CurrentUser.FinancialYear })));
            self.GridCtrl = new GridController("@Url.Action("List")",self.SC);
            self.GridCtrl.Search();
            self.GridCtrl.AddColumn("Title", "Title");
            self.GridCtrl.AddColumn("Description","Description");
            self.GridCtrl.AddColumn("Creation Date", "CreationDate", "date");
            self.GridCtrl.AddColumn("Expir Date", "ExpirDate", "date");
            self.GridCtrl.AddColumn("Group","GroupName");

            self.ModalErrors = ko.viewmodel.fromModel([]);
            self.New = function () {
                self.Errors([]);

                ko.viewmodel.updateFromModel(self.Model, self.ModelJS);
            }

            self.TransactionsComputed = ko.computed(function () {
                return self.Model.NotificationResponses();
            });
            self.SaveResponse = function (result) {
                if ($("#txtNotiResponse").val()) {
                    if (self.Model.ID() > 0) {
                        waitingDialog.show('Saving...');
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("AddResponse")",
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            data: ko.toJSON({ NotiResponse: $("#txtNotiResponse").val(), NotiID: self.Model.ID() }),
                            success: function (result) {
                                waitingDialog.hide();
                                if (result.Exceptions.length == 0) {
                                    ShowDeleteMessage();
                                    
                                    $("#NotificationResponseModal").modal('hide');
                                    self.ModalErrors([]);
                                    $("#txtNotiResponse").val("");
                                    ko.viewmodel.updateFromModel(self.Model, result.Data[0]);
                                }
                                else { self.ModalErrors(result.Exceptions); }
                            },
                            failure: function () {}
                        });
                    }
                }
                else {
                    self.ModalErrors.push("Notification Response is required");
                }
            }
            self.Save  = function()
            {
                waitingDialog.show('Saving...');
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Save")",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON(self.Model),
                    success: function (result) {
                        waitingDialog.hide();

                        if(result.Exceptions.length==0)
                        {
                            ShowSuccessMessage();
                            ko.viewmodel.updateFromModel(self.Model,result.Model);

                            self.GridCtrl.GoToPage(self.GridCtrl.PageIndex(), false);
                            self.Errors([]);
                        }
                        else
                        {
                            self.Errors(result.Exceptions);
                        }
                    },
                    failure: function () {
                        //   alert('Fail');
                    }
                });
            }
            self.Delete  = function()
            {
                if(confirm('Are you sure you want to delete this record'))
                {
                    waitingDialog.show('Deleting...');
                    self.Errors([]);
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Delete")",
                        dataType: "json",
                        data: {ID:self.Model.ID()} ,
                        success: function (result) {
                            waitingDialog.hide();
                            if(result.Exceptions.length==0)
                            {
                                ShowDeleteMessage();
                                self.New();

                                self.GridCtrl.GoToPage(self.GridCtrl.PageIndex(),false);
                                self.Errors([]);
                            }
                            else
                            {self.Errors(result.Exceptions);}
                        },
                        failure: function () {}
                    });
                }
            }
            self.OnGridRowSelected = function(selectedrow)
            {
                self.Errors([]);
                waitingDialog.show('Loading...');
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Details")",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON({ID:selectedrow.ID,RowCount:0} ),
                    success: function (result) {
                        waitingDialog.hide();
                        self.Errors([]);
                        GetNotifications(true);
                        ko.viewmodel.updateFromModel(self.Model, result.Data[0]);

                        $('html, body').animate({
                            scrollTop: $("#scrollTo").offset().top
                        }, 1000);
                    },
                    failure: function () {
                        //   alert('Fail');
                    }
                });
            }
            self.GridCtrl.OnRowSelectedCallBack = self.OnGridRowSelected;
        }

        $(document).ready(function () {
            var controller = new Controller();
            ko.applyBindings(controller, document.getElementById("content"));

            if ("@(!string.IsNullOrEmpty(Request.QueryString["id"]))".toLowerCase() == "true") {
                var selectedrow = { "ID": "@Request.QueryString["id"]" };
                controller.OnGridRowSelected(selectedrow);
            }
        });
        HoverActiveLink("10");
        HoverSubActiveLink("Sub92")
    </script>
}