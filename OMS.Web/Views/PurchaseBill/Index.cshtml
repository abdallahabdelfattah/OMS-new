@using OMS.Model.ViewModel;
@using OMS.Web.Utilities;
@using OMS.Resources;
@{
    ViewBag.Title = AppResource.PurchaseBill;
    Layout = "~/Views/Shared/_layout.cshtml";
}
<div class="content-wrapper">
    <section class="content-header">
        <h1>
            @AppResource.PurchaseBill
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> @AppResource.Home</a></li>
            <li><a href="#">@AppResource.Bills</a></li>
            <li class="active">@AppResource.PurchaseBill</li>
        </ol>

        <div class="box box-primary">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">@AppResource.Details</h3>
                    <div class='pull-right'>
                        <div class='doc-buttons'>
                            <a href='#' class='btn btn-primary btn-xs toolbarBtn' data-bind='click:Save'>@AppResource.Save</a>
                        </div>
                    </div>
                </div>

                <div class="box-body" id="scrollTo">
                    @KOWriter.WriteErrorMessage()
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label class="control-label">@AppResource.InvoiceNo<span style="color:red;">*</span></label>
                            @KOWriter.WriteTextbox("Model.InvoiceNo", ",enable:false")
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label class="control-label">@AppResource.SupplierInvoiceNo<span style="color:red;">*</span></label>
                            @KOWriter.WriteTextbox("Model.SupplierInvoiceNo")
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label class="control-label">@AppResource.InvoiceDate<span style="color:red;">*</span></label>
                            @KOWriter.WriteDatePicker("Model.InvoiceDate")
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label class="control-label">@AppResource.SupplierInvoiceDate<span style="color:red;">*</span></label>
                            @KOWriter.WriteDatePicker("Model.SupplierInvoiceDate")
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label class="control-label">@AppResource.PurchaseAgentName<span style="color:red;">*</span></label>
                            @KOWriter.WriteTextbox("Model.PurchaseAgentName")
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label class="control-label">@AppResource.TaxFees</label>
                            @KOWriter.WriteDecimalTextbox("Model.TaxFees")
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label class="control-label">@AppResource.OtherFees</label>
                            @KOWriter.WriteDecimalTextbox("Model.OtherFees")
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label class="control-label">@AppResource.InvoiceAmount<span style="color:red;">*</span></label>
                            @KOWriter.WriteDecimalTextbox("Model.InvoiceAmount")
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label class="control-label">@AppResource.Warehouse<span style="color:red;">*</span></label>
                            <select class='form-control' id="WarehouseId" data-bind='value:Model.WarehouseId,options:Warehouses,optionsText:"Name",optionsValue:"Id",optionsCaption:"@AppResource.Select"'></select>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label class="control-label">@AppResource.Supplier<span style="color:red;">*</span></label>
                            <select class='form-control' id="SupplierId" data-bind='value:Model.SupplierId,options:Suppliers,optionsText:"Name",optionsValue:"Id",optionsCaption:"@AppResource.Select"'></select>
                        </div>
                    </div>
                    <div class="col-lg-1">
                        <div class="form-group">
                            <label class="control-label">@AppResource.Cash<span style="color:red;">*</span></label>
                            @KOWriter.WriteCheckbox("Model.Status")
                        </div>
                    </div>
                    <div class="col-lg-5">
                        <div class="form-group">
                            <label class="control-label">@AppResource.Notes<span style="color:red;">*</span></label>
                            @KOWriter.WriteTextArea("Model.Notes")
                        </div>
                    </div>
                </div>

                <div class="box box-primary">
                    <div class="box-header with-border">
                    </div>
                    <div class="box-body">
                        <div class="form-group">
                            <div class="col-lg-4">
                                @KOWriter.WriteDropDown("Model.SelectedProductId", "Products", ItemText: "Name", ItemValue: "Id", additionalKOattributes: $",optionsCaption:\"{AppResource.Select}\"")

                            </div>
                            <div class='pull-right'>
                                <div class='doc-buttons'>
                                    <button class="btn btn-sm btn-primary pull-right" data-bind="click:AddNewDetail" style="margin-bottom: 5px;" aria-hidden="true">@AppResource.Add</button>
                                    <br />
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <table class="table table-bordered table-responsive m-b-none text-sm">
                                <thead>
                                    <tr>
                                        <th>@AppResource.Product<span style="color: red;">*</span></th>
                                        <th>@AppResource.Qty<span style="color: red;">*</span></th>
                                        <th>@AppResource.OfficialPrice<span style="color: red;">*</span></th>
                                        <th>@AppResource.PurchasePrice<span style="color: red;">*</span></th>
                                        <th>@AppResource.ChangeRate<span style="color: red;">*</span></th>
                                        <th>@AppResource.Currency<span style="color: red;">*</span></th>

                                    </tr>
                                </thead>
                                <tbody data-bind="foreach:TransactionsComputed">
                                    <tr>
                                        <td>@KOWriter.WriteTextbox("ProductName", ",enable:false")</td>
                                        <td>@KOWriter.WriteIntegerTextbox("Qty")</td>
                                        <td>@KOWriter.WriteIntegerTextbox("OfficialUnitPrice", ",enable:false")</td>
                                        <td>@KOWriter.WriteIntegerTextbox("PurchasePrice")</td>
                                        <td>@KOWriter.WriteIntegerTextbox("ChangeRate")</td>
                                        <td>@KOWriter.WriteDropDown("CurrencyId", "$root.Currencies", ItemText: "Name", ItemValue: "Id")</td>
                                        <td> <button class="btn btn-sm btn-danger" data-bind="click: $root.RemoveFromDetails" style="margin-bottom: 5px;" aria-hidden="true"><i class="fa fa-trash-o"></i></button></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="box box-primary">
                    <div class="box-header with-border">
                    </div>
                    <div class="box-body">
                        <div class="form-group">

                            @*<div class="col-lg-4">
                @KOWriter.WriteDropDown("Model.MedicalLensMasterId", "MedicalLenses", ItemText: "Name", ItemValue: "Id", additionalKOattributes: $",optionsCaption:\"{AppResource.Select}\"")

            </div>
            <div class='pull-right'>
                <div class='doc-buttons'>
                    <button class="btn btn-sm btn-primary pull-right" data-bind="click:ShowLensTbl" style="margin-bottom: 5px;" aria-hidden="true">@AppResource.LensesTable</button>
                    <button class="btn btn-sm btn-primary pull-right" data-bind="visible: showMedicalLensTbl" style="margin-bottom: 5px;" aria-hidden="true">@AppResource.AddLensDetails</button>
                    <br />
                </div>
            </div>
        </div>
        <div class="form-group" data-bind="visible: showMedicalLensTbl">
            <div id="medicalLensTbl" class="hot"></div>
        </div>*@
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <label class="control-label">@AppResource.MedicalLens</label>
                                    @KOWriter.WriteDropDown3("MedicalLensMasterId", "MedicalLenses", "details-type", additionalKOattributes: $",optionsCaption:\"{AppResource.Select}\"")
                                </div>
                            </div>

                            <div class="box-footer">
                                <div class='pull-right'>
                                    <div class='doc-buttons'>
                                        <button class="btn btn-xs btn-primary toolbarBtn" id="ShowHanzoTable" style="margin-bottom:5px;" aria-hidden="true">ShowHanzoTable</button>
                                        <button class="btn btn-success btn-xs toolbarBtn" data-bind='click:AddLense' id="btnAddLenses" style="margin-bottom:5px;" aria-hidden="true">@AppResource.AddLesnse</button>
                                    </div>
                                </div>
                            </div>

                            <div class="box-body">
                                <div class="form-group">

                                    <div id="HanzoTable" class="hot"></div>

                                </div>
                            </div>

                        </div>
                </div>

            </div>
        </div>
    </section>

</div>
@section scripts
{
    <script>
        function Controller() {
            var self = this;
            //$('#HanzoTable').hide();
            //$('#ShowHanzoTable').hide();
            //$('#btnAddLenses').hide();
            self.Errors = ko.viewmodel.fromModel([]);

            self.ModelJS = @Html.Raw(Json.Encode(Model));
            self.Brands = ko.viewmodel.fromModel(@Html.Raw(Json.Encode(ViewBag.Brands)));
            self.Warehouses = @Html.Raw(Json.Encode(ViewBag.Warehouses));
            self.Products = @Html.Raw(Json.Encode(ViewBag.Products));
            self.Suppliers = @Html.Raw(Json.Encode(ViewBag.Suppliers));
            self.Currencies = @Html.Raw(Json.Encode(ViewBag.Currencies));
            self.MedicalLenses = @Html.Raw(Json.Encode(ViewBag.MedicalLenses));
            self.showMedicalLensTbl = ko.observable(false);
            self.IsMidical = ko.observable(false);

            self.Model = ko.viewmodel.fromModel(self.ModelJS);

            self.AddNewDetail = function() {
                $.ajax({
                    type: "POST",
                    url: "GetProductDetail",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON({ selectedProductId: self.Model.SelectedProductId() }),
                    success: function(result) {
                        var newPurchaseDetail = ko.viewmodel.fromModel(result);

                        self.Model.Details.push(newPurchaseDetail);
                    },
                    failure: function() {

                    }
                });

            }

            //self.ShowLensTbl = function () {
            //    debugger;
            //    self.showMedicalLensTbl(!self.showMedicalLensTbl());
            //    $.ajax({
            //        type: "POST",
            //        url: "GetMedicalLensDetail",
            //        contentType: "application/json; charset=utf-8",
            //        dataType: "json",
            //        data: ko.toJSON({ SelectedBrandId: self.Model.SelectedBrandId() }),
            //        success: function(result) {
            //            var newPurchaseDetail = ko.viewmodel.fromModel(result);

            //            self.Model.Details.push(newPurchaseDetail);
            //        },
            //        failure: function() {

            //        }
            //    });

            //}

            self.TransactionsComputed = ko.computed(function() {
                var total = 0;
                /*checkLensStatus();*/
                for (var p = 0; p < self.Model.Details().length; ++p) {
                    total += (Number(self.Model.Details()[p].Qty()) * Number(self.Model.Details()[p].PurchasePrice()));
                }
                self.Model.InvoiceAmount(total);
                return self.Model.Details();
            });

            //self.TransactionsComputed = ko.computed(function() {
            //    var total = 0;
            //    /*checkLensStatus();*/
            //    for (var p = 0; p < self.Model.Details().length; ++p) {
            //        total += (Number(self.Model.Details()[p].Qty()) * Number(self.Model.Details()[p].PurchasePrice()));
            //    }
            //    self.Model.InvoiceAmount(total);
            //    return self.Model.Details();
            //});

            self.RemoveFromDetails = function(det) {
                if (det.Id() == 0) {
                    self.Model.Details.remove(det);
                }
            }

            self.New = function() {
                self.Errors([]);
                ko.viewmodel.updateFromModel(self.Model, self.ModelJS);
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetDocumentNumber")",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON(self.Model),
                    success: function(result) {
                        self.Model.InvoiceNo(result);
                        self.Model.InvoiceDate(new Date());
                        self.Model.SupplierInvoiceDate(new Date());
                    },
                    failure: function() {
                    }
                });
            }

            //function checkLensStatus () {
            //    var index = self.Model.SelectedProductId;

            //    if (self.Model.Products[index] == "lens") {
            //        self.IsMidical(true);

            //    } else {
            //        self.IsMidical(false);
            //    }
            //}

            self.Save = function() {
                waitingDialog.show('Saving...');
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Save")",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON(self.Model),
                    success: function(result) {
                        waitingDialog.hide();

                        if (result.Exceptions.length == 0) {
                            ShowSuccessMessage();
                            ko.viewmodel.updateFromModel(self.Model, result.ModelJS);
                            self.Errors([]);
                        } else {
                            self.Errors(result.Exceptions);
                        }
                    },
                    failure: function() {
                        self.Errors();
                    }
                });
            }


            self.items = ko.observableArray([{ comment: 'first comment', amount: 0 }]);
            self.addNewItem = function() {
                self.items.push(new Item('', 0));
            };
        }

        var Item = function(name, amount) {
            var self = this;
            self.comment = ko.observable(name);
            self.amount = ko.observable(amount);
        };

        $(document).ready(function() {
            ko.applyBindings(new Controller(), document.getElementById("content"));
            //h table
            var dynamicColumns = [
                {
                    data: 'SphId',
                    type: 'numeric',
                    readOnly: true,
                    width: 100,

                }, {
                    data: 'SphName',
                    type: 'text',
                    readOnly: true

                },
                {
                    data: 'Id',
                    type: 'numeric',
                    readOnly: true

                },
                {
                    data: 'MedicalLensMasterId',
                    type: 'numeric',
                    readOnly: true

                },
                {
                    data: 'CYL_0',
                    type: 'numeric'

                },
                {
                    data: 'CYL_0_25',
                    type: 'numeric'

                },
                {
                    data: 'CYL_0_5',
                    type: 'numeric'

                },
                {
                    data: 'CYL_0_75',
                    type: 'numeric'

                },
                {
                    data: 'CYL_1',
                    type: 'numeric'

                },
                {
                    data: 'CYL_1_25',
                    type: 'numeric'

                },
                {
                    data: 'CYL_1_5',
                    type: 'numeric'

                },
                {
                    data: 'CYL_1_75',
                    type: 'numeric'

                },
                {
                    data: 'CYL_2',
                    type: 'numeric'

                },
                {
                    data: 'CYL_2_25',
                    type: 'numeric'

                },
                {
                    data: 'CYL_2_5',
                    type: 'numeric'

                },
                {
                    data: 'CYL_2_75',
                    type: 'numeric'

                },
                {
                    data: 'CYL_3',
                    type: 'numeric'

                },
                {
                    data: 'CYL_3_25',
                    type: 'numeric'

                },
                {
                    data: 'CYL_3_5',
                    type: 'numeric'

                },
                {
                    data: 'CYL_3_75',
                    type: 'numeric'

                },
                {
                    data: 'CYL_4',
                    type: 'numeric'

                },
                {
                    data: 'CYL_4_25',
                    type: 'numeric'

                },
                {
                    data: 'CYL_4_5',
                    type: 'numeric'

                },
                {
                    data: 'CYL_4_75',
                    type: 'numeric'

                },
                {
                    data: 'CYL_5',
                    type: 'numeric'

                },
                {
                    data: 'CYL_5_25',
                    type: 'numeric'

                },
                {
                    data: 'CYL_5_5',
                    type: 'numeric'

                },
                {
                    data: 'CYL_5_75',
                    type: 'numeric'

                },
                {
                    data: 'CYL_6',
                    type: 'numeric'

                }
            ];
            //Header
            var dynamicheader = ["SphId", "SPH", "Id", "MedicalLensMasterId"];
            for (var i = 0; i <= 6; i = i + 0.25) {
                var title = "-" + i.toString();
                dynamicheader.push(title);
            }
            var sourceDataObject = [];

            var container = document.querySelector('#HanzoTable');
            var setting = {
                //  data: sourceDataObject,
                colHeaders: dynamicheader,
                // rowHeights: 30,
                minSpareRows: 1,
                manualRowResize: true,
                columns: dynamicColumns,
                hiddenColumns: {
                    columns: [0, 2, 3],
                    indicators: true
                },
                // colWidths: 100,
                width: '100%',
                height: "520",
                fixedColumnsLeft: 1,

                licenseKey: 'non-commercial-and-evaluation'
            };


            var hot = new Handsontable(container, setting);

            $("#details-type").on("change", function () {

                GetData();

            });

            $("#ShowHanzoTable").on("click", function () {

                $('#HanzoTable').show();
                $('#btnAddLenses').show();
            });

            //$("#btnAddLenses").on("click", function () {


            //});

            function GetData() {

                typeId = $("#details-type").val();

                $.ajax({
                    url: "/Sph.json",
                    method: "GET",
                    async: true,
                    success: function (mydata2) {
                        hot.loadData(mydata2);
                    }
                });


            }

            GetData();


        });


        //HoverActiveLink("27");
        //HoverSubActiveLink("Sub51");
    </script>
}