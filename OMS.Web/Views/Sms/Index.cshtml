@using OMS.Model.ViewModel;
@using OMS.Model.ViewModel.SC
@using OMS.Web.Utilities;
@using OMS.Resources;
@{
    ViewBag.Title = AppResource.ManageSMS;
    Layout = "~/Views/Shared/_layout.cshtml";
}
<div class="content-wrapper">
    <section class="content-header">
        <h1>
            @AppResource.ManageSMS
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> @AppResource.Home</a></li>
            <li><a href="#">@AppResource.SetupData</a></li>
            <li class="active">@AppResource.ManageSMS</li>
        </ol>
    </section>
    <section id="content" class="content">
        
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">@AppResource.Details</h3>
                <div class="box-tools pull-right">
                    <div class="form-group">
                        @KOWriter.WriteToolbar()
                    </div>
                </div>
            </div>
            <div class="box-body" id="scrollTo">
                @KOWriter.WriteErrorMessage()
                <div class="col-lg-12">
                    <div class="form-group">
                        <label class="control-label">@AppResource.Email<span style="color:red;">*</span></label>
                        @KOWriter.WriteTextArea("Model.Message")
                    </div>
                </div>
            </div>
        </div>

    </section>
</div>
@section scripts
{
    <script>
        function Controller()
        {
            var self = this;
            self.Errors = ko.viewmodel.fromModel([]);
            self.ModelJS = @Html.Raw(Json.Encode(new SmsViewModel()));
            self.Countries= ko.viewmodel.fromModel(@Html.Raw(Json.Encode(ViewBag.Countries)));

            self.Model = ko.viewmodel.fromModel(self.ModelJS);



            self.New = function()
            {
                self.Errors([]);

                ko.viewmodel.updateFromModel(self.Model,self.ModelJS);
            }

            self.Save  = function()
            {
                waitingDialog.show('Saving...');
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Save")",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON(self.Model),
                    success: function (result) {
                        waitingDialog.hide();

                        if(result.Exceptions.length==0)
                        {
                            ShowSuccessMessage();
                            ko.viewmodel.updateFromModel(self.Model,result.Model);

                            self.GridCtrl.GoToPage(self.GridCtrl.PageIndex(),false);

                            self.Errors([]);
                        }
                        else
                        {
                            self.Errors(result.Exceptions);
                        }
                    },
                    failure: function () {
                        //   alert('Fail');
                    }
                });
            }

            self.Delete  = function()
            {
                if(confirm('Are you sure you want to delete this record'))
                {
                    waitingDialog.show('Deleting...');

                    self.Errors([]);
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Delete")",
                        dataType: "json",
                        data: {Id:self.Model.Id()} ,
                        success: function (result) {
                            waitingDialog.hide();
                            if(result.Exceptions.length==0)
                            {
                                ShowDeleteMessage();
                                self.New();

                                self.GridCtrl.GoToPage(self.GridCtrl.PageIndex(),false);

                                self.Errors([]);
                            }
                            else
                            {
                                self.Errors(result.Exceptions);
                            }
                        },
                        failure: function () {
                            //   alert('Fail');
                        }
                    });
                }
            }

            self.OnGridRowSelected = function(selectedrow)
            {
                self.Errors([]);
                waitingDialog.show('Loading...');
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Details")",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON({Id:selectedrow.Id} ),
                    success: function (result) {
                        waitingDialog.hide();
                        self.Errors([]);
                        ko.viewmodel.updateFromModel(self.Model, result.Data[0]);

                        $('html, body').animate({
                            scrollTop: $("#scrollTo").offset().top
                        }, 1000);
                    },
                    failure: function () {
                        //   alert('Fail');
                    }
                });
            }
            self.GridCtrl.OnRowSelectedCallBack = self.OnGridRowSelected;
        }

        $(document).ready(function () {
            ko.applyBindings(new Controller(),document.getElementById("content"));
        });

    </script>
}