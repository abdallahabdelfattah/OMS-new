@using OMS.Model.ViewModel;
@using OMS.Web.Utilities;
@using OMS.Resources;

@{
    ViewBag.Title = AppResource.WarehouseTransfer;
    Layout = "~/Views/Shared/_layout.cshtml";
}
<div class="content-wrapper">
    <section class="content-header">
        <h1>
            @AppResource.WarehouseTransfer
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> @AppResource.Home</a></li>
            <li><a href="#">@AppResource.WarehouseTransaction</a></li>
            <li class="active">@AppResource.WarehouseTransfer</li>
        </ol>
    </section>
    <section id="content" class="content">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">@AppResource.Details</h3>
                <div class="box-tools pull-right">
                    <div class="form-group">
                        <a href='#' class='btn btn-primary btn-xs toolbarBtn' data-bind='click:Save'>@AppResource.Save</a>
                    </div>
                </div>
            </div>
            <div class="box-body">
                @KOWriter.WriteErrorMessage()

                <div class="col-lg-2">
                    <div class="form-group">
                        <label class="control-label">@AppResource.DocNo<span style="color:red;"></span></label>
                        @KOWriter.WriteTextbox("Model.DocNo", ",enable:false")
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="control-label">@AppResource.TransactionDate<span style="color:red;">*</span></label>
                        @KOWriter.WriteDatePicker("Model.Date")
                    </div>
                </div>
                <br style="clear:both" />
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label">@AppResource.Warehouser<span style="color:red;"></span></label>
                        @KOWriter.WriteTextbox("Model.EmployeeName")
                    </div>
                </div>
                <br style="clear:both" />
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label">@AppResource.SourceWarehouse<span style="color:red;">*</span></label>
                        @KOWriter.WriteDropDown("Model.WarehouseId", "SourWarehouses", additionalKOattributes: $",optionsCaption:\"{AppResource.Select}\"")
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label">@AppResource.DestinationWarehouse<span style="color:red;">*</span></label>
                        @KOWriter.WriteDropDown("Model.DestWarehouseId", "SourWarehouses", additionalKOattributes: $",optionsCaption:\"{AppResource.Select}\"")
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="form-group">
                        <label class="control-label">@AppResource.Notes</label>
                        @KOWriter.WriteTextArea("Model.Notes")
                    </div>
                </div>
            </div>
            </div>
        
        <div class="box box-primary">
            <div class="box-header with-border">
            </div>
            <div class="box-body">
                <div class="form-group">
                    <button class="btn btn-sm btn-primary pull-right" data-bind="click:AddNewDetail" style="margin-bottom:5px;" aria-hidden="true">@AppResource.AddNew</button>
                    <br />
                    <table class="table table-bordered table-responsive m-b-none text-sm">
                        <thead>
                            <tr>
                                <th>@AppResource.Product<span style="color:red;">*</span></th>
                                <th>@AppResource.Qty<span style="color:red;">*</span></th>
                                <th width="30"></th>
                            </tr>
                        </thead>
                        <tbody data-bind="foreach:TransactionsComputed">
                            <tr>
                                <td>@KOWriter.WriteDropDown("ProductId", "$root.Products")</td>
                                <td class="numericcell">@KOWriter.WriteIntegerTextbox("Qty")</td>

                                <td> <button class="btn btn-sm btn-danger" data-bind="click: $root.RemoveFromDetails" style="margin-bottom:5px;" aria-hidden="true"><i class="fa fa-trash-o"></i></button></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>
</div>
@section scripts
{
    <script>
        function Controller()
        {
            var self = this;
            self.Errors = ko.viewmodel.fromModel([]);
            self.ModelJS = @Html.Raw(Json.Encode(new WarehouseTransferModel()));
            self.Model = ko.viewmodel.fromModel(self.ModelJS);

            self.SourWarehouses = @Html.Raw(Json.Encode(ViewBag.SourWarehouses));
            self.DestWarehouses = ko.observableArray([]);
            self.Products = ko.observableArray([]);



            self.Model.WarehouseId.subscribe(function (newvalue)
            {
                if (newvalue == undefined || newvalue == null) {
                    self.Products([]);
                    //self.DestWarehouses([]);
                    return;
                }

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("FillProducts")",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON({ WarehouseId: newvalue }),
                    success: function (result) {
                        self.Products(result);
                        //self.DestWarehouses(result.DesWarehouses);
                    },
                    failure: function () {
                        //   alert('Fail');
                    }
                });
            });

            self.TransactionsComputed = ko.computed(function () {
                return self.Model.Details();
            });

            self.AddNewDetail=function()
            {
                var EmptyDetailModel=ko.viewmodel.fromModel(@Html.Raw(Json.Encode(new WarehouseTransferModel())));
                self.Model.Details.push(EmptyDetailModel);
            }
            self.RemoveFromDetails=function(det)
            {
                if (det.ID()==0)
                {
                    self.Model.Details.remove(det);
                }
            }
            
            self.Save  = function()
            {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Save")",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON(self.Model),
                    success: function (result) {

                        if(result.Exceptions.length==0)
                        {
                            ShowSuccessMessage();
                            ko.viewmodel.updateFromModel(self.Model, self.ModelJS);

                            $.ajax({
                                type: "POST",
                                url: "@Url.Action("GetDocumentNumber")",
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                data: ko.toJSON(self.Model),
                                success: function (result) {
                                    self.Model.DocNo(result);
                                },
                                failure: function () {
                                }
                            });

                            self.Errors([]);
                        }
                        else
                        {
                            self.Errors(result.Exceptions);
                        }
                        location.reload();
                    },
                    failure: function () {
                        //   alert('Fail');
                    }
                });
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("GetDocumentNumber")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: ko.toJSON(self.Model),
                success: function (result) {
                    self.Model.DocNo(result);
                },
                failure: function () {
                }
            });
        }

        $(document).ready(function () {
            ko.applyBindings(new Controller(),document.getElementById("content"));
        });

    </script>
}