@using OMS.Model.ViewModel
@using OMS.Resources
@using OMS.Web.Utilities

@{
    ViewBag.Title = AppResource.InventoryVerification;
    Layout = "~/Views/Shared/_layout.cshtml";
}
<div class="content-wrapper">
    <section class="content-header">
        <h1>
            @AppResource.InventoryVerification
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> @AppResource.Home</a></li>
            <li><a href="#">@AppResource.WarehouseTransaction</a></li>
            <li class="active">@AppResource.InventoryVerification</li>
        </ol>
    </section>
    <section id="content" class="content">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">@AppResource.Search</h3>
                <div class="box-tools">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label>@AppResource.Name</label>
                        <input class="form-control" placeholder="@AppResource.EnterName" data-bind="value:SC.Name">
                    </div>
                </div>

            </div>
            <div class="box-footer">
                <button type="submit" data-bind="click:GridCtrl.Search" class="btn btn-primary pull-right">@AppResource.Search</button>
            </div>
        </div>
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">@AppResource.List</h3>

                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>
            </div>
            <div class="box-body">
                <div class="form-group">
                    <paged-grid params="GridCtrl:GridCtrl"></paged-grid>
                </div>
            </div>
        </div>

        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">@AppResource.Details</h3>
                <div class="box-tools pull-right">
                    <div class="form-group">
                        @*@KOWriter.WriteToolbar()*@
                        <div class='pull-right'>
                            <div class='doc-buttons'>
                                <a href='#' class='btn btn-success btn-xs toolbarBtn' data-bind='click:New'>@AppResource.New</a>
                                <a href='#' class='btn btn-primary btn-xs toolbarBtn' data-bind='click:Save'>@AppResource.Save</a>
                                <a href='#' class='btn btn-danger btn-xs toolbarBtn' data-bind='visible:Model.Id() > 0,click:Delete'>@AppResource.Remove</a>
                                <a href='#' class='btn btn-info btn-xs toolbarBtn' data-bind='visible:Model.Id() > 0 && Model.IsSettled() != true,click:Delete'>@AppResource.Settle</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="box-body" id="scrollTo">
                @KOWriter.WriteErrorMessage()
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="control-label">@AppResource.OperationNo<span style="color:red;">*</span></label>
                        @KOWriter.WriteTextbox("Model.DocNo", ",enable:false")
                    </div>
                </div>

                <br style="clear:both" />
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="control-label">@AppResource.VerificationDate<span style="color:red;">*</span></label>
                        @*@KOWriter.WriteDatePicker("Model.Date",",enable:Model.Id() == 0")*@
                        <input type='text' data-bind="value:Model.Id() == 0?null:Model.StrDate(),enable:Model.Id() == 0,dateTimePicker: Model.Date()" class="form-control pull-right datepicker2" />
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="control-label">@AppResource.Warehouser<span style="color:red;">*</span></label>
                        @KOWriter.WriteTextbox("Model.WarehouserName",",enable:Model.Id() == 0")
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="control-label">@AppResource.Warehouse<span style="color:red;">*</span></label>
                        @KOWriter.WriteDropDown("Model.WarehouseId", "Warehouses", additionalKOattributes: $",enable:Model.Id() == 0,optionsCaption:\"{AppResource.Select}\"")
                    </div>
                </div>

                <div class="col-lg-12">
                    <div class="form-group">
                        <label class="control-label">@AppResource.Notes<span style="color:red;">*</span></label>
                        @KOWriter.WriteTextArea("Model.Notes",",enable:Model.Id() == 0")
                    </div>
                </div>

            </div>
        </div>
        <div class="box box-primary">
            <div class="box-header with-border">
            </div>
            <div class="box-body">
                <div class="form-group">

                    <table class="table table-bordered table-responsive m-b-none text-sm">
                        <thead>
                            <tr>
                                <th>@AppResource.Product</th>
                                <th width="130">@AppResource.TransQty</th>
                                <th width="130">@AppResource.ActualQty<span style="color:red;">*</span></th>
                            </tr>
                        </thead>
                        <tbody data-bind="foreach:TransactionsComputed">
                            <tr>
                                <td data-bind="text:ProductName"></td>
                                <td data-bind="text:TransQty"></td>
                                <td>@KOWriter.WriteIntegerTextbox("ActualQty",",enable:$root.Model.Id()==0")</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>
</div>
@section scripts
{
    <script>
        function Controller()
        {
            var self = this;
            self.Errors = ko.viewmodel.fromModel([]);
            self.ModelJS = @Html.Raw(Json.Encode(new WarehouseVerificationModel()));
            self.Model = ko.viewmodel.fromModel(self.ModelJS);
            self.Warehouses = @Html.Raw(Json.Encode(ViewBag.Warehouses));

            self.Model = ko.viewmodel.fromModel(self.ModelJS);
            self.SC = ko.viewmodel.fromModel(@Html.Raw(Json.Encode(new WarehouseVerificationSearchViewModel(){PageIndex=1, RowCount = 10  })));
            self.GridCtrl = new GridController("@Url.Action("List")",self.SC);
            self.GridCtrl.Search();
            self.GridCtrl.AddColumn("@AppResource.OperationNo", "DocNo");
            self.GridCtrl.AddColumn("@AppResource.VerificationDate", "StrDate");
            self.GridCtrl.AddColumn("@AppResource.Warehouse", "WarehouseName");
            self.GridCtrl.AddColumn("@AppResource.Warehouser", "WarehouserName");
            self.GridCtrl.AddColumn("@AppResource.IsSettled", "IsSettled","bool");

             

            self.TransactionsComputed = ko.computed(function () {
                return self.Model.Details();
            });

            self.Model.WarehouseId.subscribe(function (newvalue)
            {
                if (newvalue == undefined || newvalue == null) {
                    return;
                }

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("FillDetails")",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON({ WarehouseID: newvalue }),
                    success: function (result) {
                        
                        self.Model.Details(result);
                        var r = self.Model.Details();
                    },
                    failure: function () {
                        //   alert('Fail');
                    }
                });
            });

            self.New = function()
            {
                self.Errors([]);
                ko.viewmodel.updateFromModel(self.Model, self.ModelJS);
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetDocumentNumber")",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON(self.Model),
                    success: function (result) {
                        self.Model.DocNo(result);
                    },
                    failure: function () {
                    }
                });
            }

            self.OnGridRowSelected = function(selectedrow)
            {
                self.Errors([]);
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Details")",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON({Id:selectedrow.Id,RowCount:0} ),
                    success: function (result) {
                       
                        self.Errors([]);
                        ko.viewmodel.updateFromModel(self.Model, result.Data[0]);

                        $('html, body').animate({
                            scrollTop: $("#scrollTo").offset().top
                        },1000);
                    },
                    failure: function () {
                        //   alert('Fail');
                    }
                });
            }

            self.Save  = function()
            {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Save")",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON(self.Model),
                    success: function (result) {

                        if(result.Exceptions.length==0)
                        {
                            ShowSuccessMessage();
                            ko.viewmodel.updateFromModel(self.Model,result.Model);
                            self.GridCtrl.GoToPage(self.GridCtrl.PageIndex(),false);
                            self.Errors([]);
                        }
                        else
                        {
                            self.Errors(result.Exceptions);
                        }
                    },
                    failure: function () {
                        //   alert('Fail');
                    }
                });
            }

            self.Delete  = function()
            {
                if(confirm('@AppResource.DeleteConfirmationMsg'))
                {
                    self.Errors([]);
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Delete")",
                        dataType: "json",
                        data: {Id:self.Model.Id()} ,
                        success: function (result) {
                            waitingDialog.hide();
                            if(result.Exceptions.length==0)
                            {
                                self.New();
                                self.GridCtrl.GoToPage(self.GridCtrl.PageIndex(),false);
                                self.Errors([]);
                            }
                            else
                            {
                                self.Errors(result.Exceptions);
                            }
                        },
                        failure: function () {
                            //   alert('Fail');
                        }
                    });
                }
            }
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetDocumentNumber")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: ko.toJSON(self.Model),
                success: function (result) {
                    self.Model.DocNo(result);
                },
                failure: function () {
                }
            });

            self.GridCtrl.OnRowSelectedCallBack = self.OnGridRowSelected;
        }

        $(document).ready(function () {
            ko.applyBindings(new Controller(),document.getElementById("content"));
        });
    </script>
}