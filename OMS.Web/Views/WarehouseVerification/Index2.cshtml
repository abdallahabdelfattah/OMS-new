@using OMS.Model.ViewModel;
@using OMS.Web.Utilities;
@using OMS.Resources;

@{
    ViewBag.Title = AppResource.InventoryVerification;
    Layout = "~/Views/Shared/_layout.cshtml";
}
<div class="content-wrapper">
    <section class="content-header">
        <h1>
            @AppResource.InventoryVerification
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> @AppResource.Home</a></li>
            <li><a href="#">@AppResource.WarehouseTransaction</a></li>
            <li class="active">@AppResource.InventoryVerification</li>
        </ol>
    </section>
    <section id="content" class="content">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">@AppResource.Details</h3>
                <div class="box-tools pull-right">
                    <div class="form-group">
                        <a href='#' class='btn btn-primary btn-xs toolbarBtn' data-bind='click:Save'>@AppResource.Save</a>
                    </div>
                </div>
            </div>
            <div class="box-body">
                @KOWriter.WriteErrorMessage()
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="control-label">@AppResource.VerificationDate<span style="color:red;">*</span></label>
                        <input type='text' data-bind="dateTimePicker: Model.Date, format: 'DD/MM/YYYY'" class="form-control" />
                    </div>
                </div>
                <br style="clear:both" />
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="control-label">@AppResource.DocNo<span style="color:red;">*</span></label>
                        @KOWriter.WriteTextbox("Model.DocNo",",enable:false")

                    </div>
                </div>
                <div class="col-lg-8">
                    <div class="form-group">
                        <label class="control-label">@AppResource.Warehouse<span style="color:red;">*</span></label>
                        @KOWriter.WriteDropDown("Model.WarehouseId", "Warehouses", additionalKOattributes: $",optionsCaption:\"{AppResource.Select}\"")
                    </div>
                </div>

                <div class="col-lg-12">
                    <div class="form-group">
                        <label class="control-label">@AppResource.Notes<span style="color:red;">*</span></label>
                        @KOWriter.WriteTextArea("Model.Notes")
                    </div>
                </div>
            </div>
        </div>
        <div class="box box-primary">
            <div class="box-header with-border">
            </div>
            <div class="box-body">
                <div class="form-group">
                    
                    <table class="table table-bordered table-responsive m-b-none text-sm">
                        <thead>
                            <tr>
                                <th>@AppResource.Product</th>
                                <th width="130">@AppResource.TransQty</th>
                                <th width="130">@AppResource.ActualQty<span style="color:red;">*</span></th>
                            </tr>
                        </thead>
                        <tbody data-bind="foreach:TransactionsComputed">
                            <tr>
                                <td data-bind="text:ProductName"></td>
                                <td data-bind="text:TransQty"></td>
                                <td>@KOWriter.WriteIntegerTextbox("ActualQty")</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>
</div>
@section scripts
{
    <script>
        function Controller()
        {
            var self = this;
            self.Errors = ko.viewmodel.fromModel([]);
            self.ModelJS = @Html.Raw(Json.Encode(new WarehouseVerificationModel()));
            self.Model = ko.viewmodel.fromModel(self.ModelJS);

            self.Warehouses = @Html.Raw(Json.Encode(ViewBag.Warehouses));

            self.TransactionsComputed = ko.computed(function () {
                return self.Model.Details();
            });

            self.Model.WarehouseId.subscribe(function (newvalue)
            {
                if (newvalue == undefined || newvalue == null) {
                    return;
                }

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("FillDetails")",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON({ WarehouseID: newvalue }),
                    success: function (result) {
                        
                        self.Model.Details(result);
                        var r = self.Model.Details();
                    },
                    failure: function () {
                        //   alert('Fail');
                    }
                });
            });

            self.Save  = function()
            {
                waitingDialog.show('Saving...');
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Save")",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: ko.toJSON(self.Model),
                    success: function (result) {
                        waitingDialog.hide();
                        location.reload();
                        if(result.Exceptions.length==0)
                        {
                            ShowSuccessMessage();
                            ko.viewmodel.updateFromModel(self.Model,result.Model);

                            self.Errors([]);
                        }
                        else
                        {
                            self.Errors(result.Exceptions);
                        }
                    },
                    failure: function () {
                        //   alert('Fail');
                    }
                });
            }
        }

        $(document).ready(function () {
            ko.applyBindings(new Controller(), document.getElementById("content"));
        });

    </script>
}